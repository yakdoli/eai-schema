{
  "name": "MCP 통합 검사",
  "description": "MCP 통합 관련 파일의 아키텍처와 구현을 검사합니다",
  "trigger": {
    "event": "file_save",
    "patterns": [
      "src/mcp/*.ts",
      "src/mcp/**/*.ts",
      "mcp-server/**/*.ts",
      "mcp-server/**/*.js"
    ]
  },
  "prompt": "MCP 통합 코드를 검토해주세요. .kiro/steering/mcp-integration-guide.md의 가이드라인을 참조하여:\n\n🔌 MCP 아키텍처 패턴:\n- IMCPProvider 인터페이스 준수\n- BaseMCPProvider 상속 적절성\n- 프로바이더 패턴 구현\n- 캐퍼빌리티 정의의 명확성\n\n🏗️ 구현 품질:\n- 초기화/정리 로직 완성도\n- 에러 처리 및 복구 메커니즘\n- 비동기 처리 패턴\n- 로깅 및 모니터링\n\n🔄 확장성:\n- 새로운 프로바이더 추가 용이성\n- 플러그인 시스템 호환성\n- 설정 관리 유연성\n- 버전 호환성\n\n🛡️ 보안 및 안정성:\n- 입력 검증 및 sanitization\n- 외부 서비스 연동 보안\n- 타임아웃 및 재시도 로직\n- 메모리 누수 방지\n\n📊 성능 최적화:\n- 연결 풀링\n- 캐싱 전략\n- 배치 처리\n- 비동기 큐 활용\n\n🔗 외부 도구 통합:\n- Atlassian (Jira/Confluence) 연동\n- GitHub 연동\n- 기타 외부 API 연동\n- 인증 및 권한 관리\n\nMCP 아키텍처 원칙에 어긋나는 부분이나 개선이 필요한 부분이 있다면 구체적인 코드 예시와 함께 제안해주세요.",
  "enabled": true,
  "priority": "medium",
  "tags": ["mcp", "integration", "architecture", "extensibility"]
}
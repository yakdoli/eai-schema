{
  "name": "스키마 처리 보안 검사",
  "description": "스키마 처리 관련 파일의 보안과 성능을 검사합니다",
  "trigger": {
    "event": "file_save",
    "patterns": [
      "src/services/*Schema*.ts",
      "src/services/*Validation*.ts",
      "src/services/messageMappingService.ts",
      "src/services/fileUploadService.ts"
    ]
  },
  "prompt": "스키마 처리 관련 파일이 수정되었습니다. EAI Schema Toolkit의 핵심 보안 요구사항을 확인해주세요:\n\n🛡️ XML 처리 보안:\n- XXE (XML External Entity) 공격 방지\n- DTD 처리 비활성화\n- 외부 엔티티 참조 차단\n- libxmljs2 안전한 옵션 사용\n- XML 파일 크기 제한\n\n🔍 JSON 스키마 검증:\n- AJV 스키마 검증 적절한 사용\n- 스키마 정의의 완성도\n- 에러 메시지 적절한 처리\n- JSON 파싱 에러 처리\n\n📄 YAML 처리:\n- 안전한 파싱 옵션 (safeLoad)\n- 타입 검증\n- 크기 제한\n- 악성 YAML 방지\n\n⚡ 성능 최적화:\n- 대용량 파일 스트림 처리\n- 메모리 효율적 파싱\n- 적절한 캐싱 전략\n- 비동기 처리 패턴\n\n🔒 파일 업로드 보안:\n- MIME 타입 검증\n- 파일 확장자 검증\n- 파일 크기 제한\n- 임시 파일 정리\n- 경로 순회 공격 방지\n\n검증 로직의 완성도를 평가하고, 보안 취약점이나 성능 이슈가 발견되면 구체적인 개선 방안을 제안해주세요.",
  "enabled": true,
  "priority": "critical",
  "tags": ["schema", "security", "performance", "xml", "json", "yaml"]
}
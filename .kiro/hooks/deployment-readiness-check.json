{
  "name": "배포 준비 상태 검사",
  "description": "CI/CD 파이프라인과 배포 설정의 안정성을 검사합니다",
  "trigger": {
    "event": "file_save",
    "patterns": [
      ".github/workflows/*.yml",
      ".github/workflows/*.yaml",
      "Procfile",
      "package.json",
      "release.config.json",
      "scripts/*.sh"
    ]
  },
  "prompt": "배포 설정의 안정성과 준비 상태를 검토해주세요:\n\n🔄 CI/CD 파이프라인:\n- 테스트 자동 실행 설정\n- 빌드 프로세스 검증\n- 환경별 배포 전략\n- 롤백 메커니즘\n- 배포 승인 프로세스\n\n🌐 배포 환경 설정:\n- Heroku 설정 (Procfile, 환경 변수)\n- GitHub Pages 설정\n- 도메인 및 SSL 설정\n- 헬스체크 엔드포인트\n- 로드 밸런싱 고려\n\n🔒 보안 설정:\n- 환경 변수 보안 관리\n- GitHub Secrets 적절한 사용\n- API 키 및 토큰 보호\n- 프로덕션 환경 접근 제어\n\n📊 모니터링 및 알림:\n- 배포 상태 모니터링\n- 에러 알림 설정\n- 성능 메트릭 수집\n- 로그 집계 및 분석\n\n🚀 성능 최적화:\n- 빌드 시간 최적화\n- 캐싱 전략\n- 정적 자산 최적화\n- CDN 활용\n\n🔧 EAI Schema Toolkit 특화:\n- Node.js 버전 호환성\n- 의존성 보안 검사\n- 스키마 처리 라이브러리 호환성\n- MCP 서버 배포 설정\n\n⚠️ 위험 요소 점검:\n- 단일 실패 지점\n- 데이터 손실 위험\n- 서비스 중단 가능성\n- 보안 취약점\n\n🧪 테스트 및 검증:\n- 배포 전 테스트 커버리지\n- 통합 테스트 실행\n- 성능 테스트\n- 보안 테스트\n\n📋 체크리스트:\n- 환경 변수 설정 완료\n- 데이터베이스 마이그레이션\n- 외부 서비스 연동 확인\n- 백업 및 복구 계획\n\n배포 실패 위험이 있는 설정이나 개선이 필요한 부분이 있다면 우선순위와 함께 구체적인 해결 방안을 제안해주세요.",
  "enabled": true,
  "priority": "critical",
  "tags": ["deployment", "cicd", "heroku", "github-actions"]
}
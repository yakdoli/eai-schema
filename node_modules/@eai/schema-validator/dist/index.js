// 메인 검증 엔진
export { SchemaValidator } from './schema-validator';
// 개별 검증기들
export { SyntaxValidator } from './validators/syntax-validator';
export { ReferenceValidator } from './validators/reference-validator';
export { NamespaceValidator } from './validators/namespace-validator';
export { TypeValidator } from './validators/type-validator';
// 리포트 생성기
export { ReportGenerator } from './generators/report-generator';
// 타입 정의
export * from './types';
// 기본 검증기 인스턴스 생성 함수
import { SchemaValidator } from './schema-validator';
export function createSchemaValidator() {
    return new SchemaValidator();
}
// 유틸리티 함수들
export const ValidationUtils = {
    /**
     * 검증 결과가 유효한지 확인
     */
    isValidationResultValid: (result) => {
        return result.isValid && result.issues.filter((i) => i.severity === 'error').length === 0;
    },
    /**
     * 검증 결과에서 에러만 필터링
     */
    getErrorsOnly: (result) => {
        return result.issues.filter((i) => i.severity === 'error');
    },
    /**
     * 검증 결과에서 경고만 필터링
     */
    getWarningsOnly: (result) => {
        return result.issues.filter((i) => i.severity === 'warning');
    },
    /**
     * 검증 결과 요약 생성
     */
    summarizeValidationResult: (result) => {
        const { errorCount, warningCount, infoCount } = result.summary;
        return `에러: ${errorCount}, 경고: ${warningCount}, 정보: ${infoCount}`;
    }
};

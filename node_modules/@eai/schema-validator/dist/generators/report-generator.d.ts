import { UnifiedSchema } from '@eai/shared';
import { ValidationResult, ValidationReport, ReferenceValidationResult, NamespaceValidationResult, TypeValidationResult } from '../types';
/**
 * 검증 리포트 생성기
 */
export declare class ReportGenerator {
    /**
     * 검증 결과들로부터 통합 리포트를 생성합니다
     */
    generateReport(schema: UnifiedSchema, validationResults: ValidationResult[], referenceResult?: ReferenceValidationResult, namespaceResult?: NamespaceValidationResult, typeResult?: TypeValidationResult): Promise<ValidationReport>;
    /**
     * 모든 검증 결과에서 이슈들을 통합합니다
     */
    private consolidateIssues;
    /**
     * 참조 무결성 검증 결과에서 이슈를 생성합니다
     */
    private createReferenceIssues;
    /**
     * 네임스페이스 검증 결과에서 이슈를 생성합니다
     */
    private createNamespaceIssues;
    /**
       * 타입 검증 결과에서 이슈를 생성합니다
       */
    private createTypeIssues;
    /**
     * 중복된 이슈들을 제거합니다
     */
    private deduplicateIssues;
    /**
     * 전체 요약을 생성합니다
     */
    private createOverallSummary;
    /**
     * 전체 상태를 결정합니다
     */
    private determineOverallStatus;
    /**
     * 리포트 ID를 생성합니다
     */
    private generateReportId;
    /**
     * HTML 형태의 리포트를 생성합니다
     */
    generateHTMLReport(report: ValidationReport): Promise<string>;
    /**
     * 이슈들의 HTML을 생성합니다
     */
    private generateIssuesHTML;
    /**
     * 상태 텍스트를 반환합니다
     */
    private getStatusText;
    /**
     * JSON 형태의 리포트를 생성합니다
     */
    generateJSONReport(report: ValidationReport): Promise<string>;
    /**
     * CSV 형태의 이슈 리포트를 생성합니다
     */
    generateCSVReport(report: ValidationReport): Promise<string>;
}
//# sourceMappingURL=report-generator.d.ts.map
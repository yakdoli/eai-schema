import { UnifiedSchema } from '@eai/shared';
import { ReferenceValidationResult } from '../types';
/**
 * 참조 무결성 검증기
 */
export declare class ReferenceValidator {
    private resolvedReferences;
    private referenceGraph;
    /**
     * 스키마의 참조 무결성을 검증합니다
     */
    validateReferences(schema: UnifiedSchema): Promise<ReferenceValidationResult>;
    /**
     * 정의된 모든 요소들을 수집합니다
     */
    private collectDefinedElements;
    /**
     * 누락된 참조를 찾습니다
     */
    private findMissingReferences;
    /**
      * 순환 참조를 찾습니다
      */
    private findCircularReferences;
    /**
     * 참조 그래프를 구축합니다
     */
    private buildReferenceGraph;
    /**
     * 특정 노드에서 순환 참조를 탐지합니다
     */
    private detectCycleFromNode;
    /**
     * 해결되지 않은 임포트를 찾습니다
     */
    private findUnresolvedImports;
    /**
     * 임포트가 해결되었는지 확인합니다
     */
    private isImportResolved;
    /**
     * 임포트 실패 이유를 반환합니다
     */
    private getImportFailureReason;
    /**
     * 내장 타입인지 확인합니다
     */
    private isBuiltInType;
    /**
     * 타입 이름에서 네임스페이스를 추출합니다
     */
    private extractNamespace;
}
//# sourceMappingURL=reference-validator.d.ts.map
import { UnifiedSchema } from '@eai/shared';
import {
  ValidationResult,
  ValidationOptions,
  ReferenceValidationResult,
  NamespaceValidationResult,
  TypeValidationResult,
  ValidationReport
} from '../types';

/**
 * 스키마 검증기 기본 인터페이스
 */
export interface ISchemaValidator {
  /**
   * 스키마 전체 검증
   */
  validate(schema: UnifiedSchema, options?: ValidationOptions): Promise<ValidationResult>;

  /**
   * 구문적 정확성 검증
   */
  validateSyntax(schema: UnifiedSchema): Promise<ValidationResult>;

  /**
   * 참조 무결성 검증
   */
  validateReferences(schema: UnifiedSchema): Promise<ReferenceValidationResult>;

  /**
   * 네임스페이스 충돌 검증
   */
  validateNamespaces(schema: UnifiedSchema): Promise<NamespaceValidationResult>;

  /**
   * 타입 호환성 검증
   */
  validateTypes(schema: UnifiedSchema): Promise<TypeValidationResult>;

  /**
   * 검증 리포트 생성
   */
  generateReport(results: ValidationResult[]): Promise<ValidationReport>;
}

/**
 * 특정 스키마 타입 검증기 인터페이스
 */
export interface ISpecificSchemaValidator {
  /**
   * 지원하는 스키마 타입들
   */
  getSupportedSchemaTypes(): string[];

  /**
   * 스키마 타입별 특화 검증
   */
  validateSpecific(schema: UnifiedSchema): Promise<ValidationResult>;
}
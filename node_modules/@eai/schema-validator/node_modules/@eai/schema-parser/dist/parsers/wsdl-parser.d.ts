import { WSDLParseOptions, WSDLParseResult } from '@eai/shared';
import { BaseParser } from './base-parser';
/**
 * WSDL 파싱 엔진
 * WSDL 1.1 및 2.0 스펙을 지원하며, 서비스, 포트, 오퍼레이션, 바인딩, 메시지 정의를 파싱합니다.
 */
export declare class WSDLParser extends BaseParser {
    private xmlParser;
    private namespaceResolver;
    private errorHandler;
    constructor();
    /**
     * WSDL 문서를 파싱합니다
     */
    parse(content: string, options?: Partial<WSDLParseOptions>): Promise<WSDLParseResult>;
    /**
     * WSDL 버전을 감지합니다
     */
    private detectWSDLVersion;
    /**
     * WSDL definitions 요소를 추출합니다
     */
    private extractDefinitions;
    /**
     * WSDL 콘텐츠를 파싱합니다
     */
    private parseWSDLContent;
    /**
     * WSDL 서비스를 파싱합니다
     */
    private parseServices;
    /**
     * WSDL 포트를 파싱합니다
     */
    private parsePorts;
    /**
     * WSDL 주소를 파싱합니다
     */
    private parseAddress;
    /**
     * WSDL 바인딩을 파싱합니다
     */
    private parseBindings;
    /**
     * WSDL 바인딩 오퍼레이션을 파싱합니다
     */
    private parseBindingOperations;
    /**
     * WSDL 바인딩 메시지를 파싱합니다
     */
    private parseBindingMessage;
    /**
     * WSDL 바인딩 파트를 파싱합니다
     */
    private parseBindingParts;
    /**
     * WSDL 바인딩 폴트를 파싱합니다
     */
    private parseBindingFaults;
    /**
     * WSDL 포트 타입을 파싱합니다
     */
    private parsePortTypes;
    /**
     * WSDL 오퍼레이션을 파싱합니다
     */
    private parseOperations;
    /**
     * 오퍼레이션 타입을 결정합니다
     */
    private determineOperationType;
    /**
     * WSDL 오퍼레이션 메시지를 파싱합니다
     */
    private parseOperationMessage;
    /**
     * WSDL 오퍼레이션 폴트를 파싱합니다
     */
    private parseOperationFaults;
    /**
     * WSDL 메시지를 파싱합니다
     */
    private parseMessages;
    /**
     * WSDL 메시지 파트를 파싱합니다
     */
    private parseMessageParts;
    /**
     * WSDL 타입을 파싱합니다
     */
    private parseTypes;
    /**
     * WSDL 스키마를 파싱합니다
     */
    private parseSchemas;
    /**
     * WSDL 임포트를 파싱합니다
     */
    private parseImports;
    /**
     * 스타일을 파싱합니다
     */
    private parseStyle;
    /**
     * 사용법을 파싱합니다
     */
    private parseUse;
    /**
     * 문서화 정보를 추출합니다
     */
    private extractDocumentation;
    /**
     * 메타데이터를 생성합니다
     */
    private generateMetadata;
    /**
     * 외부 참조를 추출합니다
     */
    private extractExternalReferences;
    /**
     * WSDL을 검증합니다
     */
    private validateWSDL;
    /**
     * 기본 구조를 검증합니다
     */
    private validateBasicStructure;
    /**
     * 참조 무결성을 검증합니다
     */
    private validateReferences;
    /**
     * 바인딩을 검증합니다
     */
    private validateBindings;
    /**
     * 네임스페이스를 검증합니다
     */
    private validateNamespaces;
    /**
     * 고유 ID를 생성합니다
     */
    private generateId;
}
//# sourceMappingURL=wsdl-parser.d.ts.map
export declare const FILE_UPLOAD: {
    readonly MAX_SIZE: number;
    readonly ALLOWED_MIME_TYPES: readonly ["text/xml", "application/xml", "application/json", "text/plain", "application/x-yaml", "text/yaml", "application/wsdl+xml", "application/xsd+xml"];
    readonly ALLOWED_EXTENSIONS: readonly [".xml", ".wsdl", ".xsd", ".json", ".yaml", ".yml"];
    readonly TIMEOUT: 30000;
};
export declare const URL_REQUEST: {
    readonly TIMEOUT: 5000;
    readonly MAX_REDIRECTS: 5;
    readonly USER_AGENT: "EAI-Schema-Toolkit/1.0";
    readonly BLOCKED_HOSTS: readonly ["localhost", "127.0.0.1", "0.0.0.0", "::1"];
    readonly ALLOWED_PROTOCOLS: readonly ["http:", "https:"];
};
export declare const PARSING: {
    readonly MAX_DEPTH: 100;
    readonly MAX_ELEMENTS: 10000;
    readonly MAX_ATTRIBUTES: 1000;
    readonly NAMESPACE_SEPARATOR: ":";
    readonly DEFAULT_NAMESPACE: "default";
};
export declare const VALIDATION: {
    readonly MAX_ERRORS: 100;
    readonly MAX_WARNINGS: 200;
    readonly STRICT_MODE: false;
    readonly ENABLE_WARNINGS: true;
};
export declare const CONVERSION: {
    readonly DEFAULT_VERSION: "1.0";
    readonly MAX_CONVERSION_TIME: 60000;
    readonly BATCH_SIZE: 1000;
};
export declare const MAPPING: {
    readonly AUTO_MAPPING_THRESHOLD: 0.8;
    readonly MAX_MAPPINGS: 10000;
    readonly DEFAULT_TRANSFORM_TIMEOUT: 5000;
};
export declare const COMPARISON: {
    readonly MAX_DIFFERENCES: 1000;
    readonly SIMILARITY_THRESHOLD: 0.7;
    readonly DEEP_COMPARISON_LIMIT: 1000;
};
export declare const SESSION: {
    readonly MAX_SESSIONS: 100;
    readonly SESSION_TIMEOUT: number;
    readonly CLEANUP_INTERVAL: number;
    readonly MAX_HISTORY_SIZE: 1000;
};
export declare const CACHE: {
    readonly DEFAULT_TTL: number;
    readonly MAX_CACHE_SIZE: number;
    readonly CLEANUP_THRESHOLD: 0.8;
};
export declare const API: {
    readonly VERSION: "v1";
    readonly BASE_PATH: "/api";
    readonly RATE_LIMIT: {
        readonly WINDOW_MS: number;
        readonly MAX_REQUESTS: 100;
    };
    readonly CORS: {
        readonly ORIGIN: readonly ["http://localhost:3000", "http://localhost:3001"];
        readonly METHODS: readonly ["GET", "POST", "PUT", "DELETE", "OPTIONS"];
        readonly ALLOWED_HEADERS: readonly ["Content-Type", "Authorization", "X-Requested-With"];
    };
};
export declare const ERROR_CODES: {
    readonly FILE_TOO_LARGE: "FILE_TOO_LARGE";
    readonly INVALID_FILE_TYPE: "INVALID_FILE_TYPE";
    readonly UPLOAD_FAILED: "UPLOAD_FAILED";
    readonly PARSING_FAILED: "PARSING_FAILED";
    readonly INVALID_XML: "INVALID_XML";
    readonly INVALID_JSON: "INVALID_JSON";
    readonly NAMESPACE_ERROR: "NAMESPACE_ERROR";
    readonly REFERENCE_ERROR: "REFERENCE_ERROR";
    readonly VALIDATION_FAILED: "VALIDATION_FAILED";
    readonly SCHEMA_INVALID: "SCHEMA_INVALID";
    readonly TYPE_MISMATCH: "TYPE_MISMATCH";
    readonly CONSTRAINT_VIOLATION: "CONSTRAINT_VIOLATION";
    readonly CONVERSION_FAILED: "CONVERSION_FAILED";
    readonly UNSUPPORTED_CONVERSION: "UNSUPPORTED_CONVERSION";
    readonly CONVERSION_TIMEOUT: "CONVERSION_TIMEOUT";
    readonly MAPPING_FAILED: "MAPPING_FAILED";
    readonly INVALID_MAPPING: "INVALID_MAPPING";
    readonly MAPPING_CONFLICT: "MAPPING_CONFLICT";
    readonly COMPARISON_FAILED: "COMPARISON_FAILED";
    readonly SCHEMA_NOT_FOUND: "SCHEMA_NOT_FOUND";
    readonly SAP_CONNECTION_FAILED: "SAP_CONNECTION_FAILED";
    readonly SAP_AUTH_FAILED: "SAP_AUTH_FAILED";
    readonly SAP_OBJECT_NOT_FOUND: "SAP_OBJECT_NOT_FOUND";
    readonly SAP_METADATA_ERROR: "SAP_METADATA_ERROR";
    readonly INTERNAL_ERROR: "INTERNAL_ERROR";
    readonly TIMEOUT: "TIMEOUT";
    readonly MEMORY_LIMIT_EXCEEDED: "MEMORY_LIMIT_EXCEEDED";
    readonly RATE_LIMIT_EXCEEDED: "RATE_LIMIT_EXCEEDED";
};
export declare const LOG_LEVELS: {
    readonly ERROR: 0;
    readonly WARN: 1;
    readonly INFO: 2;
    readonly DEBUG: 3;
};
export declare const REGEX: {
    readonly NAMESPACE: RegExp;
    readonly URL: RegExp;
    readonly FILENAME: RegExp;
    readonly VERSION: RegExp;
    readonly IDENTIFIER: RegExp;
    readonly XPATH: RegExp;
};
export declare const MIME_TYPE_MAPPING: {
    readonly '.xml': "text/xml";
    readonly '.wsdl': "application/wsdl+xml";
    readonly '.xsd': "application/xsd+xml";
    readonly '.json': "application/json";
    readonly '.yaml': "application/x-yaml";
    readonly '.yml': "application/x-yaml";
};
export declare const SCHEMA_DEFAULTS: {
    readonly WSDL: {
        readonly version: "1.1";
        readonly namespace: "http://schemas.xmlsoap.org/wsdl/";
        readonly soapNamespace: "http://schemas.xmlsoap.org/wsdl/soap/";
    };
    readonly XSD: {
        readonly version: "1.0";
        readonly namespace: "http://www.w3.org/2001/XMLSchema";
    };
    readonly JSON_SCHEMA: {
        readonly version: "draft-07";
        readonly schema: "http://json-schema.org/draft-07/schema#";
    };
    readonly OPENAPI: {
        readonly version: "3.0.0";
        readonly infoVersion: "1.0.0";
    };
    readonly SAP_ODATA: {
        readonly version: "1.0";
        readonly namespace: "http://schemas.microsoft.com/ado/2008/09/edm";
    };
};
export declare const PERFORMANCE: {
    readonly CHUNK_SIZE: number;
    readonly MAX_MEMORY_USAGE: number;
    readonly GC_THRESHOLD: 0.8;
    readonly WORKER_POOL_SIZE: 4;
};
//# sourceMappingURL=index.d.ts.map
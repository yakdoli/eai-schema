// 스키마 타입 정의
export var SchemaType;
(function (SchemaType) {
    SchemaType["WSDL"] = "WSDL";
    SchemaType["XSD"] = "XSD";
    SchemaType["JSON_SCHEMA"] = "JSON_SCHEMA";
    SchemaType["OPENAPI"] = "OPENAPI";
    SchemaType["SAP_ODATA"] = "SAP_ODATA";
    SchemaType["SAP_IDOC"] = "SAP_IDOC";
    SchemaType["SAP_RFC"] = "SAP_RFC";
    SchemaType["EAI"] = "EAI";
})(SchemaType || (SchemaType = {}));
export var RelationshipType;
(function (RelationshipType) {
    RelationshipType["ONE_TO_ONE"] = "ONE_TO_ONE";
    RelationshipType["ONE_TO_MANY"] = "ONE_TO_MANY";
    RelationshipType["MANY_TO_ONE"] = "MANY_TO_ONE";
    RelationshipType["MANY_TO_MANY"] = "MANY_TO_MANY";
})(RelationshipType || (RelationshipType = {}));
export var Cardinality;
(function (Cardinality) {
    Cardinality["ZERO_OR_ONE"] = "0..1";
    Cardinality["ONE"] = "1";
    Cardinality["ZERO_OR_MANY"] = "0..*";
    Cardinality["ONE_OR_MANY"] = "1..*";
})(Cardinality || (Cardinality = {}));
export var ConstraintType;
(function (ConstraintType) {
    ConstraintType["MIN_LENGTH"] = "MIN_LENGTH";
    ConstraintType["MAX_LENGTH"] = "MAX_LENGTH";
    ConstraintType["PATTERN"] = "PATTERN";
    ConstraintType["MIN_VALUE"] = "MIN_VALUE";
    ConstraintType["MAX_VALUE"] = "MAX_VALUE";
    ConstraintType["ENUM"] = "ENUM";
    ConstraintType["UNIQUE"] = "UNIQUE";
    ConstraintType["NOT_NULL"] = "NOT_NULL";
})(ConstraintType || (ConstraintType = {}));
export var RestrictionType;
(function (RestrictionType) {
    RestrictionType["ENUMERATION"] = "ENUMERATION";
    RestrictionType["PATTERN"] = "PATTERN";
    RestrictionType["MIN_INCLUSIVE"] = "MIN_INCLUSIVE";
    RestrictionType["MAX_INCLUSIVE"] = "MAX_INCLUSIVE";
    RestrictionType["MIN_EXCLUSIVE"] = "MIN_EXCLUSIVE";
    RestrictionType["MAX_EXCLUSIVE"] = "MAX_EXCLUSIVE";
    RestrictionType["LENGTH"] = "LENGTH";
    RestrictionType["MIN_LENGTH"] = "MIN_LENGTH";
    RestrictionType["MAX_LENGTH"] = "MAX_LENGTH";
})(RestrictionType || (RestrictionType = {}));
export var OperationType;
(function (OperationType) {
    OperationType["REQUEST_RESPONSE"] = "REQUEST_RESPONSE";
    OperationType["ONE_WAY"] = "ONE_WAY";
    OperationType["SOLICIT_RESPONSE"] = "SOLICIT_RESPONSE";
    OperationType["NOTIFICATION"] = "NOTIFICATION";
})(OperationType || (OperationType = {}));
export var BindingType;
(function (BindingType) {
    BindingType["SOAP"] = "SOAP";
    BindingType["HTTP"] = "HTTP";
    BindingType["REST"] = "REST";
    BindingType["ODATA"] = "ODATA";
})(BindingType || (BindingType = {}));
export var ErrorSeverity;
(function (ErrorSeverity) {
    ErrorSeverity["ERROR"] = "ERROR";
    ErrorSeverity["WARNING"] = "WARNING";
    ErrorSeverity["INFO"] = "INFO";
})(ErrorSeverity || (ErrorSeverity = {}));
export var TransformType;
(function (TransformType) {
    TransformType["VALUE_MAPPING"] = "VALUE_MAPPING";
    TransformType["FORMAT_CONVERSION"] = "FORMAT_CONVERSION";
    TransformType["CALCULATION"] = "CALCULATION";
    TransformType["CONCATENATION"] = "CONCATENATION";
    TransformType["SUBSTRING"] = "SUBSTRING";
    TransformType["CONDITIONAL"] = "CONDITIONAL";
})(TransformType || (TransformType = {}));
export var ChangeType;
(function (ChangeType) {
    ChangeType["ADDED"] = "ADDED";
    ChangeType["REMOVED"] = "REMOVED";
    ChangeType["MODIFIED"] = "MODIFIED";
    ChangeType["TYPE_CHANGED"] = "TYPE_CHANGED";
    ChangeType["CONSTRAINT_CHANGED"] = "CONSTRAINT_CHANGED";
})(ChangeType || (ChangeType = {}));
export var StructuralChangeType;
(function (StructuralChangeType) {
    StructuralChangeType["NAMESPACE_CHANGED"] = "NAMESPACE_CHANGED";
    StructuralChangeType["HIERARCHY_CHANGED"] = "HIERARCHY_CHANGED";
    StructuralChangeType["CARDINALITY_CHANGED"] = "CARDINALITY_CHANGED";
    StructuralChangeType["REFERENCE_CHANGED"] = "REFERENCE_CHANGED";
})(StructuralChangeType || (StructuralChangeType = {}));
export var ChangeImpact;
(function (ChangeImpact) {
    ChangeImpact["BREAKING"] = "BREAKING";
    ChangeImpact["NON_BREAKING"] = "NON_BREAKING";
    ChangeImpact["POTENTIALLY_BREAKING"] = "POTENTIALLY_BREAKING";
})(ChangeImpact || (ChangeImpact = {}));
export var SessionType;
(function (SessionType) {
    SessionType["PARSING"] = "PARSING";
    SessionType["CONVERSION"] = "CONVERSION";
    SessionType["VALIDATION"] = "VALIDATION";
    SessionType["MAPPING"] = "MAPPING";
    SessionType["COMPARISON"] = "COMPARISON";
})(SessionType || (SessionType = {}));
export var SessionStatus;
(function (SessionStatus) {
    SessionStatus["CREATED"] = "CREATED";
    SessionStatus["IN_PROGRESS"] = "IN_PROGRESS";
    SessionStatus["COMPLETED"] = "COMPLETED";
    SessionStatus["FAILED"] = "FAILED";
    SessionStatus["CANCELLED"] = "CANCELLED";
})(SessionStatus || (SessionStatus = {}));
export var LogLevel;
(function (LogLevel) {
    LogLevel["DEBUG"] = "DEBUG";
    LogLevel["INFO"] = "INFO";
    LogLevel["WARN"] = "WARN";
    LogLevel["ERROR"] = "ERROR";
})(LogLevel || (LogLevel = {}));
export var StorageType;
(function (StorageType) {
    StorageType["LOCAL"] = "LOCAL";
    StorageType["MEMORY"] = "MEMORY";
    StorageType["S3"] = "S3";
    StorageType["AZURE"] = "AZURE";
})(StorageType || (StorageType = {}));
// 다른 타입 파일들에서 export
export * from './wsdl';
export * from './xsd';
export * from './openapi';
export * from './json-schema';
export * from './sap';
export * from './errors';
export * from './unified';

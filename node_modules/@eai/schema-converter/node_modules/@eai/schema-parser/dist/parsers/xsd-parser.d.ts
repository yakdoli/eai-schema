import { XSDParseResult, ParseOptions } from '../types';
/**
 * XSD 스키마 파싱 엔진
 * XML 파서를 기반으로 XSD 스키마를 파싱하고 타입 정의를 추출합니다.
 */
export declare class XSDParser {
    private xmlParser;
    private namespaceResolver;
    private errorHandler;
    constructor();
    /**
     * XSD 스키마를 파싱합니다.
     * @param xsdContent XSD 스키마 문자열
     * @param options 파싱 옵션
     * @returns XSD 파싱 결과
     */
    parse(xsdContent: string, options?: ParseOptions): Promise<XSDParseResult>;
    /**
     * XSD 스키마 루트 요소 찾기
     */
    private findSchemaRoot;
    /**
     * XSD 스키마 객체 생성
     */
    private createXSDSchema;
    /**
     * 복합 타입 파싱
     */
    private parseComplexTypes;
    /**
     * 단일 복합 타입 파싱
     */
    private parseComplexType;
    /**
     * 단순 타입 파싱
     */
    private parseSimpleTypes;
    /**
     * 단일 단순 타입 파싱
     */
    private parseSimpleType;
    /**
     * 요소 추출 (complexType, simpleType 등)
     */
    private extractElements;
    /**
     * 기본 타입 추출
     */
    private extractBaseType;
    /**
     * 요소 파싱
     */
    private parseElements;
    /**
     * 속성 파싱
     */
    private parseAttributes;
    /**
     * 제약 조건 파싱
     */
    private parseRestrictions;
    /**
     * 열거형 파싱
     */
    private parseEnumeration;
    /**
     * import 파싱
     */
    private parseImports;
    /**
     * include 파싱
     */
    private parseIncludes;
    /**
     * 참조 해결
     */
    private resolveReferences;
}
//# sourceMappingURL=xsd-parser.d.ts.map
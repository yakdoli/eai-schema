name: Deploy to GitHub Pages and Heroku

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: |
          # package-lock.json이 없는 경우 npm install 사용
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi

      - name: Run tests
        run: npm test
        continue-on-error: true  # 테스트 실패해도 빌드 계속 진행

      - name: Build backend
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Copy docs to build output
        run: |
          mkdir -p _site
          cp -r docs/* _site/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Upload build artifacts for Heroku
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            dist/
            package.json
            package-lock.json
            Procfile
            app.json

  # Deployment job for GitHub Pages
  deploy-frontend:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Deployment job for Heroku backend
  deploy-backend:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 전체 히스토리 가져오기

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: eai-schema-api
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
        run: |
          # Heroku CLI 로그인
          echo "$HEROKU_API_KEY" | heroku auth:token
          heroku auth:whoami
          
          # Git 설정
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          
          # Heroku remote 추가
          heroku git:remote -a "$HEROKU_APP_NAME"
          
          # 빌드된 파일들을 커밋
          git add -f dist/ package.json package-lock.json Procfile app.json
          git commit -m "Deploy to Heroku [skip ci]" || echo "No changes to commit"
          
          # Heroku에 배포
          git push heroku HEAD:main --force